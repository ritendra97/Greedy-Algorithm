import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

class item{
	
	int val;
	int weight;
	
	item(int val, int weight){
		this.val = val;
		this.weight = weight;
	}
}

public class Main4 {
	
	public static void fractionalNapSack(ArrayList<item> itemWeight, int W) {
		
		Collections.sort(itemWeight, new Comparator<item>() {

			@Override
			public int compare(item o1, item o2) {
				
				int val1 = o1.val/o1.weight;
				int val2 = o2.val/o2.weight;
				
				if(val1>val2) {
					return -1;
				}else if(val1<val2) {
					return 1;
				}
				return 1;
			}
			
		});
		
		
		int current_weight = 0;
		int final_val = 0;
		
		for(int i = 0;i<itemWeight.size();i++) {
			
			if(current_weight+itemWeight.get(i).weight<=W) {
				current_weight+=itemWeight.get(i).weight;
				final_val+=itemWeight.get(i).val;
			}else {
				int remain = W-current_weight;
				final_val+=itemWeight.get(i).val/itemWeight.get(i).weight*remain;
			}
		}
		
		System.out.println(final_val);
	}
	
	public static void main(String[] args) {
		
		ArrayList<item> itemWeight = new ArrayList<>();
		
		itemWeight.add(new item(100,20));
		itemWeight.add(new item(60,10));
		itemWeight.add(new item(120,30));
		
		int W=50;
		
		
		fractionalNapSack(itemWeight,W);
	}
}
